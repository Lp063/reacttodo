{"ast":null,"code":"import _classCallCheck from \"E:\\\\work\\\\reacttodo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\work\\\\reacttodo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\work\\\\reacttodo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\work\\\\reacttodo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\work\\\\reacttodo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\work\\\\reacttodo\\\\src\\\\components\\\\TodoItem.js\";\nimport React, { Component } from 'react'; //import PropTypes from 'prop-types';\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  function TodoItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getStyle = function () {\n      return {\n        backgroundColor: 'f4f4f4f4',\n        padding: '10px',\n        borderBottom: '1px ccc dotted',\n        textDecoration: _this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n      return React.createElement(\"div\", {\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"\",\n        id: id,\n        onChange: this.props.markComplete.bind(this, id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), ' ', title));\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nexport default TodoItem;","map":{"version":3,"sources":["E:/work/reacttodo/src/components/TodoItem.js"],"names":["React","Component","TodoItem","getStyle","backgroundColor","padding","borderBottom","textDecoration","props","todo","completed","id","title","markComplete","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC,C,CACA;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAEJC,Q,GAAW,YAAM;AACf,aAAM;AACJC,QAAAA,eAAe,EAAC,UADZ;AAEJC,QAAAA,OAAO,EAAC,MAFJ;AAGJC,QAAAA,YAAY,EAAC,gBAHT;AAIJC,QAAAA,cAAc,EAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA2C;AAJvD,OAAN;AAMD,K;;;;;;;6BAEO;AAAA,6BAEW,KAAKF,KAAL,CAAWC,IAFtB;AAAA,UAECE,EAFD,oBAECA,EAFD;AAAA,UAEIC,KAFJ,oBAEIA,KAFJ;AAIN,aACI;AAAK,QAAA,KAAK,EAAE,KAAKT,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,EAA5B;AAA+B,QAAA,EAAE,EAAEQ,EAAnC;AAAuC,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAC4F,GAD5F,EAEEC,KAFF,CADJ,CADJ;AAQD;;;;EAvBoBX,S;;AA4BvB,eAAeC,QAAf","sourcesContent":["import React,{ Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends Component{\r\n\r\n  getStyle = () => {\r\n    return{\r\n      backgroundColor:'f4f4f4f4',\r\n      padding:'10px',\r\n      borderBottom:'1px ccc dotted',\r\n      textDecoration: this.props.todo.completed ? 'line-through':'none'\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    const {id,title}=this.props.todo;\r\n\r\n    return (\r\n        <div style={this.getStyle()}>\r\n            <p>\r\n            <input type=\"checkbox\" name=\"\" id={id} onChange={this.props.markComplete.bind(this, id)} />{' '}\r\n            { title }\r\n            </p>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}